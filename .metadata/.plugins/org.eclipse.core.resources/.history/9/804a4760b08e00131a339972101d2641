package course.labs.activitylab;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;

public class BaseActivity extends Activity {
	
	protected String _tag;
	
	protected static final String RESTART_KEY = "restart";
	protected static final String RESUME_KEY = "resume";
	protected static final String START_KEY = "start";
	protected static final String CREATE_KEY = "create";
	
	// Lifecycle counters

	// TODO
	// Create counter variables for onCreate(), onRestart(), onStart() and
	// onResume(), called mCreate, etc.
	// You will need to increment these variables' values when their
	// corresponding lifecycle methods get called
	protected int _onCreate = 0;
	protected int _onStart = 0;
	protected int _onRestart = 0;
	protected int _onResume = 0;


	// TODO: Create variables for each of the TextViews, called
        // mTvCreate, etc. 
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		
		// Check for previously saved state
		if (savedInstanceState != null) {
			// TODO:
			_onCreate = savedInstanceState.getInt(CREATE_KEY);
			_onStart = savedInstanceState.getInt(START_KEY);
			_onRestart = savedInstanceState.getInt(RESTART_KEY);
			_onResume = savedInstanceState.getInt(RESUME_KEY);
		}
		Log.d(_tag, "create");
		//displayCounts();
		_onCreate += 1;
	}
	
	@Override
	public void onStart() {
		super.onStart();

		// TODO: Emit LogCat message
		Log.d(_tag, START_KEY);
		// TODO:
		// Update the appropriate count variable
		// Update the user interface
		_onStart += 1;
		displayCounts();
	}
	
	@Override
	public void onResume() {
		super.onResume();

		// TODO: Emit LogCat message
		Log.d(_tag, RESUME_KEY);

		// TODO:
		// Update the appropriate count variable
		// Update the user interface
		_onResume += 1;
		displayCounts();
	}

	@Override
	public void onPause() {
		super.onPause();

		// TODO: Emit LogCat message
		Log.d(_tag, "onPause");
	}

	@Override
	public void onStop() {
		super.onStop();

		// TODO: Emit LogCat message
		Log.d(_tag, "onStop");
	}
	

	@Override
	public void onRestart() {
		super.onRestart();

		// TODO: Emit LogCat message
		Log.d(_tag, RESTART_KEY);

		// TODO:
		// Update the appropriate count variable
		// Update the user interface
		_onRestart += 1;
		displayCounts();
	}
	
	@Override
	public void onDestroy() {
		super.onDestroy();

		// TODO: Emit LogCat message
		Log.d(_tag, "onDestroy");
	}
	
	protected TextView GetTextView(int id)
	{
		return (TextView) findViewById(id);
	}
	
	// Updates the displayed counters
	protected void displayCounts() {
		
		GetTextView(R.id.create).setText("onCreate() calls: " + _onCreate);
		GetTextView(R.id.start).setText("onStart() calls: " + _onStart);
		GetTextView(R.id.restart).setText("onRestart() calls: " + _onRestart);
		GetTextView(R.id.resume).setText("onResume() calls: " + _onResume);
	}

	// Lifecycle callback methods overrides
	@Override
	public void onSaveInstanceState(Bundle savedInstanceState) {
		// TODO:
		// Save counter state information with a collection of key-value pairs
		// 4 lines of code, one for every count variable
		savedInstanceState.putInt(CREATE_KEY, _onCreate);
		savedInstanceState.putInt(START_KEY, _onStart);
		savedInstanceState.putInt(RESTART_KEY, _onRestart);
		savedInstanceState.putInt(RESUME_KEY, _onResume);
	}
}
